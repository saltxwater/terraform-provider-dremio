/*

package dremio

import (
	"context"

	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	dapi "github.com/saltxwater/go-dremio-api-client"
)

func resourceElement() *schema.Resource {
	return &schema.Resource{
		CreateContext: resourceElementCreate,
		ReadContext:   resourceElementRead,
		UpdateContext: resourceElementUpdate,
		DeleteContext: resourceElementDelete,
		Schema: map[string]*schema.Schema{
			"path": {
				Type:     schema.TypeList,
				Required: true,
				ForceNew: true,
				Elem: &schema.Schema{
					Type: schema.TypeString,
				},
			},
		},
	}
}

func resourceElementCreate(ctx context.Context, d *schema.ResourceData, m interface{}) diag.Diagnostics {
	c := m.(*dapi.Client)

	// Warning or errors can be collected in a slice type
	var diags diag.Diagnostics

	res, err :=
	if err != nil {
		return diag.FromErr(err)
	}

	d.SetId(res.Id)

	resourceElementRead(ctx, d, m)

	return diags
}

func resourceElementRead(ctx context.Context, d *schema.ResourceData, m interface{}) diag.Diagnostics {
	c := m.(*dapi.Client)

	// Warning or errors can be collected in a slice type
	var diags diag.Diagnostics

	resId := d.Id()

	res, err :=
	if err != nil {
		return diag.FromErr(err)
	}

	if err := d.Set("path", folder.Path); err != nil {
		return diag.FromErr(err)
	}

	return diags
}

func resourceElementUpdate(ctx context.Context, d *schema.ResourceData, m interface{}) diag.Diagnostics {
	c := m.(*dapi.Client)

	resId := d.Id()

	_, err :=
	if err != nil {
		return diag.FromErr(err)
	}
	d.Set("last_updated", time.Now().Format(time.RFC850))

	return resourceElementRead(ctx, d, m)
}

func resourceElementDelete(ctx context.Context, d *schema.ResourceData, m interface{}) diag.Diagnostics {
	c := m.(*dapi.Client)

	// Warning or errors can be collected in a slice type
	var diags diag.Diagnostics

	resId := d.Id()

	err :=
	if err != nil {
		return diag.FromErr(err)
	}

	d.SetId("")

	return diags
}


*/
